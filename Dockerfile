# Gunakan Node.js base image ringan
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package.json & package-lock.json dulu (optimasi cache)
COPY package*.json ./

# Set build-time arguments for environment variables
ARG APP_NAME
ARG PORT
ARG VERSION
ARG DATABASE_URL
ARG JWT_ACCESS_TOKEN_SECRET
ARG JWT_ACCESS_TOKEN_EXPIRE
ARG JWT_REFRESH_TOKEN_SECRET
ARG JWT_REFRESH_TOKEN_EXPIRE
ARG TIMEZONE
ARG ENCRYPTION_KEY
ARG URL_AUTH
ARG URL_CONFIG
ARG URL_TRANSACTION
ARG URL_SETTLERECON
ARG CLIENT_AUTH_NAME
ARG CLIENT_AUTH_HOST
ARG CLIENT_AUTH_PORT
ARG CLIENT_CONFIG_NAME
ARG CLIENT_CONFIG_HOST
ARG CLIENT_CONFIG_PORT
ARG CLIENT_TRANSACTION_NAME
ARG CLIENT_TRANSACTION_HOST
ARG CLIENT_TRANSACTION_PORT
ARG CLIENT_SETTLERECON_NAME
ARG CLIENT_SETTLERECON_HOST
ARG CLIENT_SETTLERECON_PORT

# Set environment variables from build-time arguments
ENV APP_NAME=$APP_NAME
ENV PORT=$PORT
ENV VERSION=$VERSION
ENV DATABASE_URL=$DATABASE_URL
ENV JWT_ACCESS_TOKEN_SECRET=$JWT_ACCESS_TOKEN_SECRET
ENV JWT_ACCESS_TOKEN_EXPIRE=$JWT_ACCESS_TOKEN_EXPIRE
ENV JWT_REFRESH_TOKEN_SECRET=$JWT_REFRESH_TOKEN_SECRET
ENV JWT_REFRESH_TOKEN_EXPIRE=$JWT_REFRESH_TOKEN_EXPIRE
ENV TIMEZONE=$TIMEZONE
ENV ENCRYPTION_KEY=$ENCRYPTION_KEY
ENV URL_AUTH=$URL_AUTH
ENV URL_CONFIG=$URL_CONFIG
ENV URL_TRANSACTION=$URL_TRANSACTION
ENV URL_SETTLERECON=$URL_SETTLERECON
ENV CLIENT_AUTH_NAME=$CLIENT_AUTH_NAME
ENV CLIENT_AUTH_HOST=$CLIENT_AUTH_HOST
ENV CLIENT_AUTH_PORT=$CLIENT_AUTH_PORT
ENV CLIENT_CONFIG_NAME=$CLIENT_CONFIG_NAME
ENV CLIENT_CONFIG_HOST=$CLIENT_CONFIG_HOST
ENV CLIENT_CONFIG_PORT=$CLIENT_CONFIG_PORT
ENV CLIENT_TRANSACTION_NAME=$CLIENT_TRANSACTION_NAME
ENV CLIENT_TRANSACTION_HOST=$CLIENT_TRANSACTION_HOST
ENV CLIENT_TRANSACTION_PORT=$CLIENT_TRANSACTION_PORT
ENV CLIENT_SETTLERECON_NAME=$CLIENT_SETTLERECON_NAME
ENV CLIENT_SETTLERECON_HOST=$CLIENT_SETTLERECON_HOST
ENV CLIENT_SETTLERECON_PORT=$CLIENT_SETTLERECON_PORT

# Install dependency
RUN npm ci

# Copy semua source code
COPY . .

RUN npx prisma generate

# Seeder Configuration Fee
RUN npm run prisma:seed

# Build project (misalnya NestJS)
RUN npm run build

# Stage kedua untuk image lebih kecil
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

# Copy hanya file yang dibutuhkan
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist

EXPOSE 3002

CMD ["node", "dist/main.js"]
