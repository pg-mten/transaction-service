// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["transaction", "settlement"]
}

model PurchaseTransaction {
  id                String                @id @default(uuid())
  external_id       String                @unique
  reference_id      String?
  merchant_id       Int
  provider          String
  agent_id          Int?
  amount            Decimal
  net_amount        Decimal?
  status            TransactionStatusEnum @default(PENDING)
  method            String
  metadata          Json?
  settlement_at     DateTime?
  reconciliation_at DateTime?

  // Audit fields
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  created_by Int?
  updated_by Int?

  // Relasi
  fee_details  FeeDetail[]
  webhook_logs WebhookLog[]
  audits       PurchaseTransactionAudit[]

  @@index([merchant_id])
  @@index([provider])
  @@index([status])
  @@map("purchase_transaction")
  @@schema("transaction")
}

model FeeDetail {
  id                      Int         @id @default(autoincrement())
  purchase_transaction_id String
  type                    FeeTypeEnum
  amount                  Decimal
  percentage              Decimal

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  created_by Int?
  updated_by Int?

  // Relasi
  transaction PurchaseTransaction @relation(fields: [purchase_transaction_id], references: [id], onDelete: Cascade)

  @@index([purchase_transaction_id])
  @@map("fee_detail")
  @@schema("transaction")
}

model WebhookLog {
  id             Int      @id @default(autoincrement())
  transaction_id String
  source         String // e.g. midtrans, xendit
  payload        Json
  raw_signature  String?
  received_at    DateTime @default(now())

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  created_by Int?
  updated_by Int?

  transaction PurchaseTransaction @relation(fields: [transaction_id], references: [id], onDelete: Cascade)

  @@index([transaction_id])
  @@index([source])
  @@schema("transaction")
}

model PurchaseTransactionAudit {
  id             Int                   @id @default(autoincrement())
  transaction_id String
  old_status     TransactionStatusEnum
  new_status     TransactionStatusEnum
  source         String // "webhook", "admin", etc
  changed_at     DateTime              @default(now())

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  created_by Int?
  updated_by Int?

  transaction PurchaseTransaction @relation(fields: [transaction_id], references: [id], onDelete: Cascade)

  @@index([transaction_id])
  @@map("purchase_transaction_audit")
  @@schema("transaction")
}

enum TransactionStatusEnum {
  PENDING
  SUCCESS
  FAILED
  EXPIRED
  CANCELLED

  @@schema("transaction")
}

enum FeeTypeEnum {
  AGENT
  INTERNAL
  PROVIDER
  MERCHANT

  @@schema("transaction")
}
