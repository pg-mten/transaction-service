// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["transaction", "settlement"]
}

model PurchaseTransaction {
  id               String                @id @default(uuid())
  externalId       String                @unique
  referenceId      String?
  merchantId       Int
  provider         String
  agentId          Int?
  amount           Decimal
  netAmount        Decimal?
  status           TransactionStatusEnum @default(PENDING)
  method           String
  metadata         Json?
  settlementAt     DateTime?
  reconciliationAt DateTime?

  // Audit fields
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?

  // Relasi
  feeDetails  FeeDetail[]
  webhookLogs WebhookLog[]
  audits      PurchaseTransactionAudit[]

  @@index([merchantId])
  @@index([provider])
  @@index([status])
  @@schema("transaction")
}

model FeeDetail {
  id                    Int         @id @default(autoincrement())
  purchaseTransactionId String
  type                  FeeTypeEnum
  amount                Decimal
  percentage            Decimal

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?

  // Relasi
  transaction PurchaseTransaction @relation(fields: [purchaseTransactionId], references: [id], onDelete: Cascade)

  @@index([purchaseTransactionId])
  @@schema("transaction")
}

model WebhookLog {
  id            Int      @id @default(autoincrement())
  transactionId String
  source        String // e.g. midtrans, xendit
  payload       Json
  rawSignature  String?
  receivedAt    DateTime @default(now())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?

  transaction PurchaseTransaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)

  @@index([transactionId])
  @@index([source])
  @@schema("transaction")
}

model PurchaseTransactionAudit {
  id            Int                   @id @default(autoincrement())
  transactionId String
  oldStatus     TransactionStatusEnum
  newStatus     TransactionStatusEnum
  source        String // "webhook", "admin", etc
  changedAt     DateTime              @default(now())

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  createdBy Int?
  updatedBy Int?

  transaction PurchaseTransaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)

  @@index([transactionId])
  @@schema("transaction")
}

enum TransactionStatusEnum {
  PENDING
  SUCCESS
  FAILED
  EXPIRED
  CANCELLED

  @@schema("transaction")
}

enum FeeTypeEnum {
  AGENT
  INTERNAL
  PROVIDER
  MERCHANT

  @@schema("transaction")
}
